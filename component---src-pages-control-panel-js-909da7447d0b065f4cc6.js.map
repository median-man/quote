{"version":3,"sources":["webpack:///./src/components/Fieldset.js","webpack:///./src/components/ColorControl.js","webpack:///./src/components/QuoteGroup.js","webpack:///./src/pages/control-panel.js","webpack:///./src/components/Fieldset.module.css","webpack:///./src/components/QuoteGroup.module.css","webpack:///./src/pages/control-panel.module.css","webpack:///./src/components/ColorControl.module.css"],"names":["Fieldset","children","className","styles","FieldsetButtonGroup","Fieldset__ButtonGroup","FieldsetLegend","Fieldset__Legend","ColorControl","ColorControlInput","color","index","onInput","ColorControl__Input","type","defaultValue","data-index","ColorControlButton","value","onClick","aria-label","ColorControl__Button","Label","QuoteGroup__Label","label","QuoteGroup","role","QuoteGroup__Heading","QuoteGroup__RemoveButton","aria-hidden","name","onChange","QuoteGroup__Input","QuoteGroup__Textarea","ControlPanel","useState","colorService","colors","setColors","useQuotes","quotes","dispatch","syncColors","removeColor","e","parseInt","target","handleColorInputChange","dataset","handleQuoteInputChange","getAttribute","console","log","PATCH_QUOTE","update","handleRemoveQuoteClick","currentTarget","REMOVE_QUOTE","to","style","marginBottom","display","ColorBar","map","key","fontSize","quote","author","cite","NEW_QUOTE","ControlPanel__AddQuoteButton","module","exports"],"mappings":"sMAIO,SAASA,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SACzB,OAAO,8BAAUC,UAAWC,IAAOH,UAAWC,GAOzC,SAASG,EAAT,GAA4C,IAAbH,EAAY,EAAZA,SACpC,OAAO,yBAAKC,UAAWC,IAAOE,uBAAwBJ,GAUjD,SAASK,EAAT,GAAuC,IAAbL,EAAY,EAAZA,SAC/B,OAAO,4BAAQC,UAAWC,IAAOI,kBAAmBN,G,8CCpB/C,SAASO,EAAT,GAAqC,IAAbP,EAAY,EAAZA,SAC7B,OAAO,yBAAKC,UAAWC,IAAOK,cAAeP,GAGxC,SAASQ,EAAT,GAAuD,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAChD,OACE,2BACEV,UAAWC,IAAOU,oBAClBC,KAAK,QACLC,aAAcL,EACdM,aAAYL,EACZC,QAASA,IAUR,SAASK,EAAT,GAAiD,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC1C,OACE,4BACEC,aAAW,eACXF,MAAOA,EACPC,QAASA,EACTjB,UAAWC,IAAOkB,sBAJpB,K,iDCsBEC,EAAQ,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SACf,OAAO,2BAAOC,UAAWC,IAAOoB,mBAAoBtB,IA2DvC,EAzGG,SAAC,GAAyB,IAAvBuB,EAAsB,EAAtBA,MAAOvB,EAAe,EAAfA,SAC1B,OACE,yBAAKC,UAAWC,IAAOsB,WAAYC,KAAK,QAAQN,aAAYI,GACzDvB,IAsGQ,EAzFC,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACjB,OAAO,wBAAIC,UAAWC,IAAOwB,qBAAsB1B,IAwFtC,EA9EM,SAAC,GAAwB,IAAtBU,EAAqB,EAArBA,MAAOQ,EAAc,EAAdA,QAC7B,OACE,4BACEjB,UAAWC,IAAOyB,yBAClBR,aAAA,iBAA4BT,EAAQ,GACpCQ,QAASA,EACTD,MAAOP,GAEP,0BAAMkB,eAAa,GAAnB,OAsES,EAlDD,SAAC,GAAmD,IAAjDlB,EAAgD,EAAhDA,MAAOa,EAAyC,EAAzCA,MAAOM,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUjB,EAAkB,EAAlBA,KAAMI,EAAY,EAAZA,MACnD,OACE,kBAAC,EAAD,KACGM,EACD,6BACA,2BACEV,KAAMA,EACNgB,KAAMA,EACNZ,MAAOA,EACPa,SAAUA,EACVf,aAAYL,EACZT,UAAWC,IAAO6B,sBAuCX,EAxBE,SAAC,GAA6C,IAA3CrB,EAA0C,EAA1CA,MAAOa,EAAmC,EAAnCA,MAAOM,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUb,EAAY,EAAZA,MAChD,OACE,kBAAC,EAAD,KACGM,EACD,6BACA,8BACEM,KAAMA,EACNC,SAAUA,EACVf,aAAYL,EACZT,UAAWC,IAAO8B,qBAClBf,MAAOA,MC9EA,SAASgB,IAAgB,IAAD,EACTC,mBAASC,OAA9BC,EAD8B,KACtBC,EADsB,OAERC,cAArBC,EAF6B,EAE7BA,OAAQC,EAFqB,EAErBA,SAEVC,EAAa,kBAAMJ,EAAUF,QAE7BO,EAAc,SAACC,GACnB,IAAMjC,EAAQkC,SAASD,EAAEE,OAAO5B,OAChCkB,IAA2BzB,GAC3B+B,KAaIK,EAAyB,SAACH,GAAO,IAC7B1B,EAAU0B,EAAEE,OAAZ5B,MACAP,EAAUiC,EAAEE,OAAOE,QAAnBrC,MACRyB,IAAwBzB,EAAOO,IAM3B+B,EAAyB,SAACL,GAAO,IAAD,IACZA,EAAEE,OAAlBhB,EAD4B,EAC5BA,KAAMZ,EADsB,EACtBA,MACRP,EAAQkC,SAASD,EAAEE,OAAOI,aAAa,eAC7CC,QAAQC,IAAI,CAAEtB,OAAMZ,QAAOP,UAC3B8B,EAAS,CAAE3B,KAAMuC,IAAa1C,QAAO2C,QAAM,OAAKxB,GAAOZ,EAAZ,MAGvCqC,EAAyB,SAACX,GAC9B,IAAMjC,EAAQkC,SAASD,EAAEY,cAActC,OACvCiC,QAAQC,IAAI,CAAEzC,UACd8B,EAAS,CAAE3B,KAAM2C,IAAc9C,WAKjC,OACE,6BACE,kBAAC,OAAD,CAAM+C,GAAG,IAAIC,MAAO,CAAEC,aAAc,QAASC,QAAS,UAAtD,iBAGA,kBAAC7D,EAAD,KACE,kBAACM,EAAD,sBACA,4CAEE,kBAACE,EAAD,KACE,kBAACC,EAAD,CACEC,MAAO0B,MACPxB,QA9BkB,SAACgC,GAAD,OAC5BR,IAA0BQ,EAAEE,OAAO5B,aAkCjC,kBAAClB,EAAD,KACE,kBAACM,EAAD,0BACA,kBAACF,EAAD,KACE,4BAAQe,QAjDC,WACfiB,IAAuB,WACvBM,MA+CM,aACA,4BAAQtB,aAAW,mBAAmBD,QAvDtB,WACtBiB,IAAmB,IACnBM,MAsDQ,0BAAMb,eAAA,GAAN,eAGJ,yBAAK3B,UAAWC,IAAO2D,UACpBzB,EAAO0B,KAAI,SAACrD,EAAOC,GAIlB,OACE,kBAACH,EAAD,CAAcwD,IAAKtD,EAAQC,GACzB,kBAACF,EAAD,CACEC,MAAOA,EACPC,MAAOA,EACPC,QAASmC,IAEX,kBAAC9B,EAAD,CAAoBC,MAAOP,EAAOQ,QAASwB,UAMrD,6BACE,wBAAIgB,MAAO,CAAEM,SAAU,UAAvB,UACA,6BACGzB,EAAOuB,KAAI,SAACG,EAAOvD,GAClB,OACE,kBAACc,EAAD,CAAsBuC,IAAKrD,EAAOa,MAAK,UAAWb,EAAQ,IACxD,kBAACc,EAAD,eAA4Bd,EAAQ,GACpC,kBAACc,EAAD,CACEd,MAAOA,EACPQ,QAASoC,IAEX,kBAAC9B,EAAD,CACEX,KAAK,OACLgB,KAAK,SACLZ,MAAOgD,EAAMC,OACbpC,SAAUkB,EACVtC,MAAOA,EACPa,MAAM,WAER,kBAACC,EAAD,CACEX,KAAK,MACLgB,KAAK,OACLZ,MAAOgD,EAAME,KACbrC,SAAUkB,EACVtC,MAAOA,EACPa,MAAM,iBAER,kBAACC,EAAD,CACEK,KAAK,QACLZ,MAAOgD,EAAMA,MACbnC,SAAUkB,EACVtC,MAAOA,EACPa,MAAM,mBAKd,4BACEL,QAnFkB,kBAAMsB,EAAS,CAAE3B,KAAMuD,OAoFzCnE,UAAWC,IAAOmE,8BAFpB,kB,uBC9IVC,EAAOC,QAAU,CAAC,SAAW,mCAAmC,iBAAmB,2CAA2C,sBAAwB,kD,qBCAtJD,EAAOC,QAAU,CAAC,WAAa,uCAAuC,oBAAsB,gDAAgD,yBAA2B,qDAAqD,kBAAoB,8CAA8C,kBAAoB,8CAA8C,qBAAuB,mD,qBCAvXD,EAAOC,QAAU,CAAC,SAAW,wCAAwC,6BAA+B,8D,uBCApGD,EAAOC,QAAU,CAAC,aAAe,2CAA2C,oBAAsB,kDAAkD,qBAAuB","file":"component---src-pages-control-panel-js-909da7447d0b065f4cc6.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Fieldset.module.css\";\n\nexport function Fieldset({ children }) {\n  return <fieldset className={styles.Fieldset}>{children}</fieldset>;\n}\n\nFieldset.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport function FieldsetButtonGroup({ children }) {\n  return <div className={styles.Fieldset__ButtonGroup}>{children}</div>;\n}\n\nFieldsetButtonGroup.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n  ]),\n};\n\nexport function FieldsetLegend({ children }) {\n  return <legend className={styles.Fieldset__Legend}>{children}</legend>;\n}\n\nFieldsetLegend.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ColorControl.module.css\";\n\nexport function ColorControl({ children }) {\n  return <div className={styles.ColorControl}>{children}</div>;\n}\n\nexport function ColorControlInput({ color, index, onInput }) {\n  return (\n    <input\n      className={styles.ColorControl__Input}\n      type=\"color\"\n      defaultValue={color}\n      data-index={index}\n      onInput={onInput}\n    />\n  );\n}\nColorControlInput.propTypes = {\n  color: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  onInput: PropTypes.func.isRequired,\n};\n\nexport function ColorControlButton({ value, onClick }) {\n  return (\n    <button\n      aria-label=\"remove color\"\n      value={value}\n      onClick={onClick}\n      className={styles.ColorControl__Button}\n    >\n      &times;\n    </button>\n  );\n}\nColorControlButton.propTypes = {\n  value: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./QuoteGroup.module.css\";\r\n\r\nconst Container = ({ label, children }) => {\r\n  return (\r\n    <div className={styles.QuoteGroup} role=\"group\" aria-label={label}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Heading = ({ children }) => {\r\n  return <h3 className={styles.QuoteGroup__Heading}>{children}</h3>;\r\n};\r\n\r\nHeading.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nconst RemoveButton = ({ index, onClick }) => {\r\n  return (\r\n    <button\r\n      className={styles.QuoteGroup__RemoveButton}\r\n      aria-label={`remove quote ${index + 1}`}\r\n      onClick={onClick}\r\n      value={index}\r\n    >\r\n      <span aria-hidden={true}>&times;</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nRemoveButton.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Label = ({ children }) => {\r\n  return <label className={styles.QuoteGroup__Label}>{children}</label>;\r\n};\r\nLabel.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nconst Input = ({ index, label, name, onChange, type, value }) => {\r\n  return (\r\n    <Label>\r\n      {label}\r\n      <br />\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        data-index={index}\r\n        className={styles.QuoteGroup__Input}\r\n      />\r\n    </Label>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Textarea = ({ index, label, name, onChange, value }) => {\r\n  return (\r\n    <Label>\r\n      {label}\r\n      <br />\r\n      <textarea\r\n        name={name}\r\n        onChange={onChange}\r\n        data-index={index}\r\n        className={styles.QuoteGroup__Textarea}\r\n        value={value}\r\n      />\r\n    </Label>\r\n  );\r\n};\r\n\r\nTextarea.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default { Container, Heading, RemoveButton, Input, Textarea };\r\n","import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport {\n  Fieldset,\n  FieldsetLegend,\n  FieldsetButtonGroup,\n} from \"../components/Fieldset\";\nimport styles from \"./control-panel.module.css\";\nimport {\n  ColorControl,\n  ColorControlInput,\n  ColorControlButton,\n} from \"../components/ColorControl\";\nimport * as colorService from \"../colorService\";\nimport { useQuotes, PATCH_QUOTE, REMOVE_QUOTE, NEW_QUOTE } from \"../quotes\";\nimport QuoteGroup from \"../components/QuoteGroup\";\n\nexport default function ControlPanel() {\n  const [colors, setColors] = useState(colorService.bgColors());\n  const { quotes, dispatch } = useQuotes();\n\n  const syncColors = () => setColors(colorService.bgColors());\n\n  const removeColor = (e) => {\n    const index = parseInt(e.target.value);\n    colorService.removeColorAt(index);\n    syncColors();\n  };\n\n  const removeAllColors = () => {\n    colorService.clear([]);\n    syncColors();\n  };\n\n  const addColor = () => {\n    colorService.pushColor(\"#888888\");\n    syncColors();\n  };\n\n  const handleColorInputChange = (e) => {\n    const { value } = e.target;\n    const { index } = e.target.dataset;\n    colorService.setColorAt(index, value);\n  };\n\n  const handleFontColorChange = (e) =>\n    colorService.setFontColor(e.target.value);\n\n  const handleQuoteInputChange = (e) => {\n    const { name, value } = e.target;\n    const index = parseInt(e.target.getAttribute(\"data-index\"));\n    console.log({ name, value, index });\n    dispatch({ type: PATCH_QUOTE, index, update: { [name]: value } });\n  };\n\n  const handleRemoveQuoteClick = (e) => {\n    const index = parseInt(e.currentTarget.value);\n    console.log({ index });\n    dispatch({ type: REMOVE_QUOTE, index });\n  };\n\n  const handleAddQuoteClick = () => dispatch({ type: NEW_QUOTE });\n\n  return (\n    <div>\n      <Link to=\"/\" style={{ marginBottom: \"1.5em\", display: \"block\" }}>\n        Back to Quote\n      </Link>\n      <Fieldset>\n        <FieldsetLegend>Font Settings</FieldsetLegend>\n        <label>\n          Font Color\n          <ColorControl>\n            <ColorControlInput\n              color={colorService.fontColor()}\n              onInput={handleFontColorChange}\n            />\n          </ColorControl>\n        </label>\n      </Fieldset>\n      <Fieldset>\n        <FieldsetLegend>Background Colors</FieldsetLegend>\n        <FieldsetButtonGroup>\n          <button onClick={addColor}>Add Color</button>\n          <button aria-label=\"clear all colors\" onClick={removeAllColors}>\n            <span aria-hidden>Clear All</span>\n          </button>\n        </FieldsetButtonGroup>\n        <div className={styles.ColorBar}>\n          {colors.map((color, index) => {\n            // color input must be uncontrolled for color well to remain visible while user drags\n            // the picker around on the well canvas. otherwise, calling render each time state changes\n            // causes the picker to be removed from the dom when the input element is replaced.\n            return (\n              <ColorControl key={color + index}>\n                <ColorControlInput\n                  color={color}\n                  index={index}\n                  onInput={handleColorInputChange}\n                />\n                <ColorControlButton value={index} onClick={removeColor} />\n              </ColorControl>\n            );\n          })}\n        </div>\n      </Fieldset>\n      <div>\n        <h2 style={{ fontSize: \"1.8em\" }}>Quotes</h2>\n        <div>\n          {quotes.map((quote, index) => {\n            return (\n              <QuoteGroup.Container key={index} label={`quote ${index + 1}`}>\n                <QuoteGroup.Heading>Quote #{index + 1}</QuoteGroup.Heading>\n                <QuoteGroup.RemoveButton\n                  index={index}\n                  onClick={handleRemoveQuoteClick}\n                />\n                <QuoteGroup.Input\n                  type=\"text\"\n                  name=\"author\"\n                  value={quote.author}\n                  onChange={handleQuoteInputChange}\n                  index={index}\n                  label=\"Author\"\n                />\n                <QuoteGroup.Input\n                  type=\"url\"\n                  name=\"cite\"\n                  value={quote.cite}\n                  onChange={handleQuoteInputChange}\n                  index={index}\n                  label=\"Citation URL\"\n                />\n                <QuoteGroup.Textarea\n                  name=\"quote\"\n                  value={quote.quote}\n                  onChange={handleQuoteInputChange}\n                  index={index}\n                  label=\"Quote Text\"\n                />\n              </QuoteGroup.Container>\n            );\n          })}\n          <button\n            onClick={handleAddQuoteClick}\n            className={styles.ControlPanel__AddQuoteButton}\n          >\n            Add Quote\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Fieldset\":\"Fieldset-module--Fieldset--3G2cZ\",\"Fieldset__Legend\":\"Fieldset-module--Fieldset__Legend--3pRqk\",\"Fieldset__ButtonGroup\":\"Fieldset-module--Fieldset__ButtonGroup--jkSGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuoteGroup\":\"QuoteGroup-module--QuoteGroup--37XtA\",\"QuoteGroup__Heading\":\"QuoteGroup-module--QuoteGroup__Heading--19LiY\",\"QuoteGroup__RemoveButton\":\"QuoteGroup-module--QuoteGroup__RemoveButton--WTnWC\",\"QuoteGroup__Label\":\"QuoteGroup-module--QuoteGroup__Label--OF0Ls\",\"QuoteGroup__Input\":\"QuoteGroup-module--QuoteGroup__Input--2wwwC\",\"QuoteGroup__Textarea\":\"QuoteGroup-module--QuoteGroup__Textarea--1vVhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorBar\":\"control-panel-module--ColorBar--AhJkt\",\"ControlPanel__AddQuoteButton\":\"control-panel-module--ControlPanel__AddQuoteButton--3Xbvc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorControl\":\"ColorControl-module--ColorControl--OrKh0\",\"ColorControl__Input\":\"ColorControl-module--ColorControl__Input--1SINq\",\"ColorControl__Button\":\"ColorControl-module--ColorControl__Button--3opmu\"};"],"sourceRoot":""}