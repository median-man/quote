{"version":3,"sources":["webpack:///./src/components/QuoteNav.module.css","webpack:///./src/components/Blockquote.js","webpack:///./src/hooks/useKeyUp.js","webpack:///./src/components/QuoteNav.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blockquote.module.css"],"names":["module","exports","Blockquote","cite","quote","author","className","style","blockquote","blockquote__body","blockquote__byline","useKeyUp","onKeyUp","key","useEffect","handleKeyUp","e","window","addEventListener","removeEventListener","QuoteNav","onClick","ariaLabel","ariaKeyShortcuts","children","direction","classNames","styles","push","QuoteNav_direction_left","QuoteNav_direction_right","join","aria-label","aria-keyshortcuts","QuoteNavNext","aria-hidden","QuoteNavPrev","Home","useQuotes","currentQuote","dispatch","touchRef","useRef","handleNextQuote","type","NEXT_QUOTE","handlePrevQuote","PREV_QUOTE","navigate","height","onTouchStart","current","startX","touches","clientX","onTouchEnd","changeX","changedTouches"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,SAAW,mCAAmC,wBAA0B,kDAAkD,yBAA2B,qD,2ICExJ,SAASC,EAAT,GAA8C,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAChD,OACE,gCAAYC,UAAWC,IAAMC,WAAYL,KAAMA,GAC7C,uBAAGG,UAAWC,IAAME,kBAAmBL,GACvC,4BAAQE,UAAWC,IAAMG,oBAAzB,KAAsDL,I,gBCO7CM,EAZE,SAACC,EAASC,GACzBC,qBAAU,WACR,IAAMC,EAAc,SAACC,GACdH,GAAOG,EAAEH,MAAQA,GACpBD,KAIJ,OADAK,OAAOC,iBAAiB,QAASH,GAC1B,kBAAME,OAAOE,oBAAoB,QAASJ,Q,qBCNrD,SAASK,EAAT,GAMI,IALFC,EAKC,EALDA,QACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,iBACAC,EAEC,EAFDA,SACAC,EACC,EADDA,UAEMC,EAAa,CAACC,IAAOP,UAM3B,MALkB,SAAdK,EACFC,EAAWE,KAAKD,IAAOE,yBAEvBH,EAAWE,KAAKD,IAAOG,0BAGvB,4BACExB,UAAWoB,EAAWK,KAAK,KAC3BC,aAAYV,EACZW,oBAAmBV,EACnBF,QAASA,GAERG,GAUA,SAASU,EAAT,GAAsD,IAA9Bb,EAA6B,EAA7BA,QAASE,EAAoB,EAApBA,iBACtC,OACE,kBAACH,EAAD,CACEC,QAASA,EACTC,UAAU,aACVC,iBAAkBA,EAClBE,UAAU,SAEV,0BAAMU,cAAY,QAAlB,MAOC,SAASC,EAAT,GAAsD,IAA9Bf,EAA6B,EAA7BA,QAASE,EAAoB,EAApBA,iBACtC,OACE,kBAACH,EAAD,CACEC,QAASA,EACTC,UAAU,iBACVC,iBAAkBA,EAClBE,UAAU,QAEV,0BAAMU,cAAY,QAAlB,MCjDS,SAASE,IAAQ,IAAD,EACMC,cAA3BC,EADqB,EACrBA,aAAcC,EADO,EACPA,SAChBC,EAAWC,iBAAO,IAClBC,EAAkB,kBAAMH,EAAS,CAAEI,KAAMC,OACzCC,EAAkB,kBAAMN,EAAS,CAAEI,KAAMG,OAK/C,OAJApC,GAAS,kBAAMqC,mBAAS,oBAAmB,KAC3CrC,GAAS,kBAAMgC,IAAiB,cAChChC,GAAS,kBAAMmC,IAAiB,aAG9B,yBACEvC,MAAO,CAAE0C,OAAQ,QACjBC,aAAc,SAAClC,GACbyB,EAASU,QAAQC,OAASpC,EAAEqC,QAAQ,GAAGC,SAEzCC,WAAY,SAACvC,GACX,IACMwC,EAAUxC,EAAEyC,eAAe,GAAGH,QAAUb,EAASU,QAAQC,OAC3DI,GAFuB,GAGzBV,IACSU,EAJgB,IAKzBb,MAIJ,kBAACP,EAAD,CACEb,iBAAiB,YACjBF,QAASyB,IAEX,kBAAC5C,EAAeqC,GAChB,kBAACL,EAAD,CACEX,iBAAiB,aACjBF,QAASsB,O,uBCvCjB3C,EAAOC,QAAU,CAAC,WAAa,uCAAuC,iBAAmB,6CAA6C,mBAAqB","file":"component---src-pages-index-js-d9102a0134655cb16b26.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuoteNav\":\"QuoteNav-module--QuoteNav--287P5\",\"QuoteNav_direction_left\":\"QuoteNav-module--QuoteNav_direction_left--3qEF1\",\"QuoteNav_direction_right\":\"QuoteNav-module--QuoteNav_direction_right--1r1M3\"};","import React from \"react\";\r\nimport style from \"./Blockquote.module.css\";\r\n\r\nexport default function Blockquote({ cite, quote, author }) {\r\n  return (\r\n    <blockquote className={style.blockquote} cite={cite}>\r\n      <p className={style.blockquote__body}>{quote}</p>\r\n      <footer className={style.blockquote__byline}>&ndash; {author}</footer>\r\n    </blockquote>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nconst useKeyUp = (onKeyUp, key) => {\r\n  useEffect(() => {\r\n    const handleKeyUp = (e) => {\r\n      if (!key || e.key === key) {\r\n        onKeyUp();\r\n      }\r\n    };\r\n    window.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => window.removeEventListener(\"keyup\", handleKeyUp);\r\n  });\r\n};\r\n\r\nexport default useKeyUp;\r\n","import React from \"react\";\nimport styles from \"./QuoteNav.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction QuoteNav({\n  onClick,\n  ariaLabel,\n  ariaKeyShortcuts,\n  children,\n  direction,\n}) {\n  const classNames = [styles.QuoteNav];\n  if (direction === \"left\") {\n    classNames.push(styles.QuoteNav_direction_left);\n  } else {\n    classNames.push(styles.QuoteNav_direction_right);\n  }\n  return (\n    <button\n      className={classNames.join(\" \")}\n      aria-label={ariaLabel}\n      aria-keyshortcuts={ariaKeyShortcuts}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n}\n\nconst propTypes = {\n  ariaKeyShortcuts: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport function QuoteNavNext({ onClick, ariaKeyShortcuts }) {\n  return (\n    <QuoteNav\n      onClick={onClick}\n      ariaLabel=\"next quote\"\n      ariaKeyShortcuts={ariaKeyShortcuts}\n      direction=\"right\"\n    >\n      <span aria-hidden=\"true\">&gt;</span>\n    </QuoteNav>\n  );\n}\n\nQuoteNavNext.propTypes = propTypes;\n\nexport function QuoteNavPrev({ onClick, ariaKeyShortcuts }) {\n  return (\n    <QuoteNav\n      onClick={onClick}\n      ariaLabel=\"previous quote\"\n      ariaKeyShortcuts={ariaKeyShortcuts}\n      direction=\"left\"\n    >\n      <span aria-hidden=\"true\">&lt;</span>\n    </QuoteNav>\n  );\n}\n\nQuoteNavPrev.propTypes = propTypes;\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport Blockquote from \"../components/Blockquote\";\nimport { NEXT_QUOTE, PREV_QUOTE, useQuotes } from \"../quotes\";\nimport useKeyUp from \"../hooks/useKeyUp\";\nimport { QuoteNavNext, QuoteNavPrev } from \"../components/QuoteNav\";\nimport { useRef } from \"react\";\n\nexport default function Home() {\n  const { currentQuote, dispatch } = useQuotes();\n  const touchRef = useRef({});\n  const handleNextQuote = () => dispatch({ type: NEXT_QUOTE });\n  const handlePrevQuote = () => dispatch({ type: PREV_QUOTE });\n  useKeyUp(() => navigate(\"/control-panel\"), \"/\");\n  useKeyUp(() => handleNextQuote, \"ArrowRight\");\n  useKeyUp(() => handlePrevQuote, \"ArrowLeft\");\n\n  return (\n    <div\n      style={{ height: \"100%\" }}\n      onTouchStart={(e) => {\n        touchRef.current.startX = e.touches[0].clientX;\n      }}\n      onTouchEnd={(e) => {\n        const MIN_SWIPE_DISTANCE = 30;\n        const changeX = e.changedTouches[0].clientX - touchRef.current.startX;\n        if (changeX < -MIN_SWIPE_DISTANCE) {\n          handlePrevQuote();\n        } else if (changeX > MIN_SWIPE_DISTANCE) {\n          handleNextQuote();\n        }\n      }}\n    >\n      <QuoteNavPrev\n        ariaKeyShortcuts=\"ArrowLeft\"\n        onClick={handlePrevQuote}\n      />\n      <Blockquote {...currentQuote} />\n      <QuoteNavNext\n        ariaKeyShortcuts=\"ArrowRight\"\n        onClick={handleNextQuote}\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockquote\":\"Blockquote-module--blockquote--3Jtcb\",\"blockquote__body\":\"Blockquote-module--blockquote__body--2-htc\",\"blockquote__byline\":\"Blockquote-module--blockquote__byline--fiiYo\"};"],"sourceRoot":""}